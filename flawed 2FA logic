........flawed 2FA verification logic........

a user has completed the initial login but the website fails to adequately verify that the same user is completing the second step

once logged in the first time,the account is assigned a cookie,when submitting the verification code,the request uses this cookie to determine which account the user is trying to access

now thats where we can change the value of the account cookie to any username when submitting the verification code,we don't even need their passwords at this point,just a username is enough since we are already partially logged in



With Burp running, log in to your own account and investigate the 2FA verification process. 
 
Notice that in the POST /login2 request, the verify parameter is used to determine which user's account is being accessed.
 
Log out of your account.

Send the GET /login2 request to Burp Repeater. Change the value of the verify parameter to carlos and send the request. This ensures that a temporary 2FA code is generated for Carlos.
 
Go to the login page and enter your username and password. Then, submit an invalid 2FA code.

Send the POST /login2 request to Burp Intruder.

In Burp Intruder, set the verify parameter to carlos and add a payload position to the mfa-code parameter. Brute-force the verification code.
Load the 302 response in the browser.
 


